# Load required libraries
library(igraph)
library(ggraph)
library(tidygraph)
library(ggplot2)
library(RColorBrewer)
library(influential)
library(rgl)


# -----------------------------
# 1. Build the Graph (directed)
# -----------------------------
cat("\n--- Creating Directed Graph of Judo Attack Combinations ---\n")
attack_combinations_igraph=graph.formula(
  Seoi.nage--Seoi.otoshi,
  Seoi.nage--O.uchi.gari,
  Seoi.nage--Ko.uchi.gari,
  Ippon.seoi.nage--Ippon.seoi.nage,
  Ippon.seoi.nage--Seoi.otoshi,
  Ippon.seoi.nage--Ko.uchi.gari,
  Ippon.seoi.nage--Osoto.gari,
  Harai.goshi--Osoto.gari,
  Harai.goshi--Uchi.mata,
  Harai.goshi--Soto.makikomi,
  Uchi.mata--O.uchi.gari,
  Uchi.mata--Ko.uchi.gari,
  O.goshi--O.uchi.gari,
  O.goshi--Ko.uchi.gari,
  O.goshi--Harai.goshi,
  O.uchi.gari--Uchi.mata,
  O.uchi.gari--Ko.uchi.gari,
  O.uchi.gari--Osoto.gari,
  O.uchi.gari--Tai.otoshi,
  O.uchi.gari--Harai.goshi,
  Ko.uchi.gari--O.uchi.gari,
  Ko.uchi.gari--Seoi.nage,
  Ko.uchi.gari--Ippon.seoi.nage,
  Ko.uchi.gari--Hane.goshi,
  Osoto.gari--Harai.goshi,
  Osoto.gari--Osoto.gari,
  Osoto.gari--O.uchi.gari,
  Osoto.gari--Ko.soto.gake,
  Osoto.gari--Sasae.tsurikomi.ashi,
  Osoto.gari--Okuri.ashi.harai,
  Osoto.gari--Hiza.guruma,
  Ko.soto.gari--Ko.soto.gari,
  Ko.soto.gari--Osoto.gari,
  Ko.soto.gari--Tai.otoshi,
  Ko.soto.gari--Harai.goshi,
  Hiza.guruma--Harai.goshi,
  Hiza.guruma--Sasae.tsurikomi.ashi,
  Hiza.guruma--Osoto.gari,
  Hiza.guruma--De.ashi.harai,
  Hiza.guruma--Hiza.guruma,
  Okuri.ashi.harai--Sode.tsuri.komi.goshi,
  Okuri.ashi.harai--Tai.otoshi,
  Okuri.ashi.harai--Harai.goshi,
  Okuri.ashi.harai--Ippon.seoi.nage,
  Okuri.ashi.harai--Seoi.nage,
  Tai.otoshi--Tai.otoshi,
  Tai.otoshi--Ko.uchi.gari,
  Tai.otoshi--O.uchi.gari,
  Hikikomi.gaeshi--O.uchi.gari,
  Hikikomi.gaeshi--Ko.uchi.gari,
  Hikikomi.gaeshi--Harai.goshi,
  Hikikomi.gaeshi--Ko.soto.gari,
  Hikikomi.gaeshi--Sukui.nage,
  Uchi.mata--O.uchi.gari,
  Tsuri.komi.goshi--O.uchi.gari,
  Tsuri.komi.goshi--Sode.tsuri.komi.goshi,
  Tsuri.komi.goshi--Tsuri.komi.goshi,
  Hane.goshi--O.uchi.gari,
  Sasae.tsurikomi.ashi--Uchi.mata,
  Sasae.tsurikomi.ashi--Tai.otoshi
)
graph_tidy <- as_tbl_graph(attack.combinations)

# -----------------------------
# 2. In/Out Degree Centrality
# -----------------------------
cat("\n--- In/Out Degree Centrality Analysis ---\n")

graph_tidy <- graph_tidy %>%
  mutate(in_degree = centrality_degree(mode = "in"),
         out_degree = centrality_degree(mode = "out"))

ggraph(graph_tidy, layout = "fr") +
  geom_edge_link(alpha = 0.3, arrow = arrow(length = unit(3, 'mm'))) +
  geom_node_point(aes(size = in_degree + out_degree, color = in_degree), show.legend = TRUE) +
  geom_node_text(aes(label = name), repel = TRUE, size = 3) +
  scale_color_viridis_c(option = "plasma", name = "In-Degree") +
  theme_minimal() +
  ggtitle("In/Out Degree Centrality of Judo Attack Network")

# -----------------------------
# 3. IVI Centrality
# -----------------------------
cat("\n--- IVI Centrality Analysis ---\n")

Graph_IVI <- ivi(graph = attack.combinations, mode = "all")

ggraph(graph_tidy %>% mutate(IVI = Graph_IVI), layout = "kk") +
  geom_edge_link(alpha = 0.3, arrow = arrow(length = unit(3, 'mm'))) +
  geom_node_point(aes(size = IVI, color = IVI)) +
  geom_node_text(aes(label = name), repel = TRUE, size = 3) +
  scale_color_viridis_c(option = "cividis", name = "IVI") +
  theme_minimal() +
  ggtitle("IVI Centrality in Judo Attack Network")

# -----------------------------
# 4. Motif Analysis
# -----------------------------
cat("\n--- Motif Analysis (Triads) ---\n")

motifs3 <- motifs(attack.combinations, size = 3)
motif_freq <- motifs3[!is.na(motifs3) & motifs3 > 0]

barplot(motif_freq, main = "Motif Frequency (Size = 3)", col = "darkorange", xlab = "Motif ID", ylab = "Count")

# -----------------------------
# 5. 3D Force Layout (Optional)
# -----------------------------
cat("\n--- 3D Visualization (Optional) ---\n")

coords <- layout_with_fr(attack.combinations, dim = 3)

rglplot(attack.combinations, layout = coords, vertex.label = V(attack.combinations)$name,
        vertex.size = 8, vertex.color = "skyblue", edge.arrow.size = 0.5)
