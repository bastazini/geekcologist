##Packages 
library(igraph)
library(ggplot2)
library(dplyr)
library(tidyr)
library(RColorBrewer)
library(poweRlaw) 



# -----------------------------
# 1. Build the Graph (directed)
# -----------------------------
cat("\n--- 1. Creating Directed Graph of Judo Attack Combinations ---\n")

# Define the attack combinations using igraph's formula notation
# Using -+ for DIRECTED edges (from first to second technique)
attack_combinations_igraph=graph.formula(
  Seoi.nage-+Seoi.otoshi,
  Seoi.nage-+O.uchi.gari,
  Seoi.nage-+Ko.uchi.gari,
  Ippon.seoi.nage-+Ippon.seoi.nage,
  Ippon.seoi.nage-+Seoi.otoshi,
  Ippon.seoi.nage-+Ko.uchi.gari,
  Ippon.seoi.nage-+Osoto.gari,
  Harai.goshi-+Osoto.gari,
  Harai.goshi-+Uchi.mata,
  Harai.goshi-+Soto.makikomi,
  Uchi.mata-+O.uchi.gari,
  Uchi.mata-+Ko.uchi.gari,
  O.goshi-+O.uchi.gari,
  O.goshi-+Ko.uchi.gari,
  O.goshi-+Harai.goshi,
  O.uchi.gari-+Uchi.mata,
  O.uchi.gari-+Ko.uchi.gari,
  O.uchi.gari-+Osoto.gari,
  O.uchi.gari-+Tai.otoshi,
  O.uchi.gari-+Harai.goshi,
  Ko.uchi.gari-+O.uchi.gari,
  Ko.uchi.gari-+Seoi.nage,
  Ko.uchi.gari-+Ippon.seoi.nage,
  Ko.uchi.gari-+Hane.goshi,
  Osoto.gari-+Harai.goshi,
  Osoto.gari-+Osoto.gari,
  Osoto.gari-+O.uchi.gari,
  Osoto.gari-+Ko.soto.gake,
  Osoto.gari-+Sasae.tsurikomi.ashi,
  Osoto.gari-+Okuri.ashi.harai,
  Osoto.gari-+Hiza.guruma,
  Ko.soto.gari-+Ko.soto.gari,
  Ko.soto.gari-+Osoto.gari,
  Ko.soto.gari-+Tai.otoshi,
  Ko.soto.gari-+Harai.goshi,
  Hiza.guruma-+Harai.goshi,
  Hiza.guruma-+Sasae.tsurikomi.ashi,
  Hiza.guruma-+Osoto.gari,
  Hiza.guruma-+De.ashi.harai,
  Hiza.guruma-+Hiza.guruma,
  Okuri.ashi.harai-+Sode.tsuri.komi.goshi,
  Okuri.ashi.harai-+Tai.otoshi,
  Okuri.ashi.harai-+Harai.goshi,
  Okuri.ashi.harai-+Ippon.seoi.nage,
  Okuri.ashi.harai-+Seoi.nage,
  Tai.otoshi-+Tai.otoshi,
  Tai.otoshi-+Ko.uchi.gari,
  Tai.otoshi-+O.uchi.gari,
  Hikikomi.gaeshi-+O.uchi.gari,
  Hikikomi.gaeshi-+Ko.uchi.gari,
  Hikikomi.gaeshi-+Harai.goshi,
  Hikikomi.gaeshi-+Ko.soto.gari,
  Hikikomi.gaeshi-+Sukui.nage,
  Uchi.mata-+O.uchi.gari,
  Tsuri.komi.goshi-+O.uchi.gari,
  Tsuri.komi.goshi-+Sode.tsuri.komi.goshi,
  Tsuri.komi.goshi-+Tsuri.komi.goshi,
  Hane.goshi-+O.uchi.gari,
  Sasae.tsurikomi.ashi-+Uchi.mata,
  Sasae.tsurikomi.ashi-+Tai.otoshi
)

# 1. Calculate Degrees
node_names <- V(attack_combinations_igraph)$name
in_degree <- degree(attack_combinations_igraph, mode = "in")
out_degree <- degree(attack_combinations_igraph, mode = "out")
total_degree <- degree(attack_combinations_igraph, mode = "total") # Sum of in and out

# Create a data frame for plotting
degree_df <- data.frame(
  Technique = node_names,
  InDegree = in_degree,
  OutDegree = out_degree,
  TotalDegree = total_degree
)

# Print the degree data
print("Degree Data for each Technique:")
print(degree_df)

# --- Plot 1: Bar plot of In, Out, and Total Degrees for each technique ---

# Reshape data to long format for ggplot
degree_df_long <- degree_df %>%
  pivot_longer(cols = c(InDegree, OutDegree, TotalDegree),
               names_to = "DegreeType",
               values_to = "DegreeValue") %>%
  mutate(DegreeType = factor(DegreeType, levels = c("InDegree", "OutDegree", "TotalDegree"))) # Control order

# Make technique names more readable if too long by adding newlines (optional)
# This is a bit manual, you might need to adjust based on your actual names
# degree_df_long$Technique_label <- gsub("\\.", ".\\n", degree_df_long$Technique)
# For this example, standard names are okay.

degree_plot <- ggplot(degree_df_long, aes(x = reorder(Technique, -DegreeValue), y = DegreeValue, fill = DegreeType)) +
  geom_bar(stat = "identity", position = position_dodge(width = 0.9)) +
  scale_fill_brewer(palette = "Set2", name = "Degree Type", labels = c("In-Degree (Used As Follow-up)", "Out-Degree (Used As Opener)", "Total Degree")) +
  labs(
    title = "Judo Technique Combination Degrees",
    subtitle = "In-degree: how often a technique is a follow-up.\nOut-degree: how often a technique initiates a combination.",
    x = "Judo Technique",
    y = "Degree Count"
  ) +
  theme_minimal(base_size = 12) +
  theme(
    axis.text.x = element_text(angle = 65, hjust = 1, vjust = 1, size = 9),
    plot.title = element_text(hjust = 0.5, face = "bold", size = 16),
    plot.subtitle = element_text(hjust = 0.5, size = 10),
    legend.position = "top",
    panel.grid.major.x = element_blank(), # Remove vertical grid lines for cleaner look
    panel.grid.minor.y = element_blank()
  ) +
  geom_text(aes(label=ifelse(DegreeValue > 0, DegreeValue, "")), 
            position=position_dodge(width=0.9), vjust=-0.25, size=2.5)


print(degree_plot)
